name: Release

# Run on every commit tag which begins with "v" (e.g., "v0.1.4")
on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: "Build Toolkit"
    runs-on: "ubuntu-latest"
    steps:

      - uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: Build
        run: |
          npm ci
          npm run build
          npm run build:modules

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            LICENSE
            README.md
            package.json
            package-lock.json
            install.bat
            start.bat
            scripts
            dist

  get-config-plugins:
    name: "Get Config Plugins"
    runs-on: "ubuntu-latest"

    steps:
      - name: "Get Config Plugins"
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "dsaltares/godot-wild-jam-18"
          file: "plugin-config.zip"
          target: "plugin-config.zip"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Unzip and remove zip
        run: |
          unzip plugin-config.zip
          rm plugin-config.zip

      - name: Upload Module
        uses: actions/upload-artifact@v2
        with:
          name: plugin-config
          path: plugin-config


  create-zip:
    name: "Create Zip File"
    needs: [build, get-plugins]
    runs-on: "ubuntu-latest"

    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build

      - run: mkdir -p modules

      - name: Download modules
        uses: actions/download-artifact@v2
        with:
          name: plugin-config
        
      - run: mv plugin-config modules

      - name: Create Zip
        run: zip -r prod-toolkit.zip LICENSE README.md package.json package-lock.json install.bat start.bat scripts/* dist/* modules/*

  release:
    name: "Release"
    needs: create-zip
    runs-on: "ubuntu-latest"

    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            prod-toolkit.zip
