extends layout

block layout-content
  h1 Api Keys
  p These keys are used to login into the Production Tool itself but also to connect other apps like the Observer Tools.

  table.table
    thead
      tr
        th key
        th Description
        th Expiring Date
        th
    tbody
      each key in keys
        tr
          td.align-middle= key.apiKey
          td.align-middle= key.description
          td.align-middle= key.expiring === -1 ? 'never' : new Date(key.expiring).toDateString()
          td.align-middle
            button.btn.btn-danger(onclick=`removeKey('${key.id}', '${key.apiKey}')`)
              i.fa.fa-trash

  form.mt-5#addKey
    .d-flex(style='gap: 1rem; width: 100%;')
      .form-group.flex-grow-1
        label(for="description") Description
        input.form-control(type="text" name="description" id="description" class="form-control" placeholder="Description" required)
      .form-group.d-flex.flex-column
        label(for="neverExpires") Never Expires
        .form-check.m-auto
          input.form-check-input.position-static(type="checkbox" id="neverExpires")
      .form-group.flex-grow-1
        label(for="expiring") Expiring
        input.form-control(type="date" name="expiring" id="expiring" class="form-control")

    button.btn.btn-success.btn-block(type="submit") Add key

  script.
    function removeKey (id, apiKey) {
      LPTE.emit({
        meta: {
          namespace: 'auth',
          type: 'remove-key',
          version: 1
        },
        id,
        apiKey
      })
    };

    document.querySelector('#neverExpires').addEventListener('change', (e) => {
      document.querySelector('#expiring').disabled = e.target.checked
    })

    document.querySelector('#addKey').addEventListener('submit', (e) => {
      e.preventDefault()
      
      LPTE.emit({
        meta: {
          namespace: 'auth',
          type: 'add-key',
          version: 1
        },
        description: e.target[0].value,
        neverExpires: e.target[1].checked,
        expiring: e.target[2].value,
      })
    })

    window.LPTE.onready(() => {
      window.LPTE.on('auth', 'update', () => {
        location.reload();
      })
    })
